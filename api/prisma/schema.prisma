// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
enum Role{
  GESTOR
  OPERADOR
}
enum Category{
  SANGRIA
  OUTRAS_ENTRADAS
  DESPESA
  DEPOSITO
}
enum Status{
  SINCRONIZADO
  PENDENTE
}
model User {
  id Int @default(autoincrement()) @id
  login Int @unique
  password String
  name String
  role Role
  filialId Int?
  filial Filial? @relation("FiliaAndlUser",fields: [filialId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Movimentations{
  id Int @default(autoincrement()) @id
  idTrier Int?
  status Status @default(PENDENTE)
  category String?
  idCategoria Int?
  idContaDest Int?
  
  valueSangriaTrier Decimal? @db.Decimal(9,2)
  descrition String
  value Decimal?  @db.Decimal(9,2)
  type Category
  filialId Int
  filial Filial @relation("FiliaAndMovimentations",fields: [filialId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model DailyBalance {
  id        Int      @default(autoincrement()) @id
  balance   Decimal  @db.Decimal(9,2)
  filialId Int?
  filial Filial? @relation("FiliaAndDayBalancy",fields: [filialId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Filial{
  id Int @default(autoincrement()) @id
  name String
  user User[] @relation("FiliaAndlUser")
  idCofreTrier Int?
  idBancoDefault Int?
  idCielo Int?
  idRede Int?
  saldo DailyBalance[] @relation("FiliaAndDayBalancy")
  movements Movimentations[] @relation("FiliaAndMovimentations")
  balanceFisic BalanceFisic[] @relation("FiliaAndBalancyFisic")
}

model CartaoVendas{
  id Int @default(autoincrement()) @id
  dataVenda DateTime
    valorBruto Decimal
    valorLiquido Decimal
    taxaAdministrativa Decimal
    modalidade String
    bandeira String
    estabelecimento String
    nsu String
    codigoAutorizacao String
}
model BalanceFisic{
  id Int @default(autoincrement()) @id
  value_100_50 Decimal  @db.Decimal(9,2) @default(0)
  value_20 Decimal  @db.Decimal(9,2) @default(0)
  value_10 Decimal  @db.Decimal(9,2) @default(0)
  value_5 Decimal  @db.Decimal(9,2) @default(0)
  value_2 Decimal  @db.Decimal(9,2) @default(0)
  value_moedas Decimal  @db.Decimal(9,2) @default(0)
  value_reserva Decimal  @db.Decimal(9,2) @default(0)
  filialId Int?
  filial Filial? @relation("FiliaAndBalancyFisic",fields: [filialId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model DeletedMovements {
 id         Int      @id @default(autoincrement())
  movementId Int  @unique()
  status     Status   @default(PENDENTE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
